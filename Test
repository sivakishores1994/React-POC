import React from "react";
import { render, screen } from "@testing-library/react";
import { Provider } from "react-redux";
import configureStore from "redux-mock-store";
import Header from "./Header";

// Mock `resumeHeaderText`
jest.mock("../../../utils/common/constants", () => ({
  resumeHeaderText: {
    HEADER_TEXT: {
      resume: "Resume Application",
      resumeSubHeader: "You can resume your application where you left off.",
    },
  },
}));

// Mock `store`
jest.mock("../../../utils/store/store", () => ({
  store: {
    getState: jest.fn(() => ({
      stages: {
        stages: [],
        journeyType: "",
        isDocumentUpload: false,
      },
    })),
  },
}));

const mockStore = configureStore([]);

describe("Header Component - Pending Application Path", () => {
  let store: any;

  beforeEach(() => {
    store = mockStore({
      stages: {
        stages: [],
        journeyType: "",
        isDocumentUpload: false,
      },
    });
  });

  it("sets header and subheader text for /pending-application", () => {
    // Mock `window.location.pathname`
    Object.defineProperty(window, "location", {
      writable: true,
      value: { pathname: "/pending-application" },
    });

    // Render the component
    render(
      <Provider store={store}>
        <Header />
      </Provider>
    );

    // Verify header and subheader text
    expect(screen.getByText("Resume Application")).toBeInTheDocument();
    expect(
      screen.getByText("You can resume your application where you left off.")
    ).toBeInTheDocument();
  });
});
