export const getProductInfo = (
  products: string,
  productInfoResponse: Array<ProductModel>
) => {
  return async (dispatch: AppDispatch) => {
    let filteredProducts = [];
    let selectedProducts: Array<string>;
    const campaign = getUrl.getParameterByName("campaign") || null;
    const intcid = getUrl.getParameterByName("intcid") || null;
    if(intcid){
      localStorage.setItem("intcid",intcid);
    }
    if (products) {
      selectedProducts =
        products.indexOf(",") > 0 ? products.split(",") : [products];
      for (let i = 0; i < selectedProducts.length; i++) {
        filteredProducts.push(
          // eslint-disable-next-line array-callback-return
          productInfoResponse.filter((product: ProductModel) => {
            if (product.product_type === selectedProducts[i]) {
              if (campaign) {
                product.campaign = campaign;
              }

              return product;
            }
          })
        );
      }
      const flatFilteredArray = filteredProducts.flat();
      if (flatFilteredArray && flatFilteredArray.length > 0) {
        dispatch(urlParamAction.productDetails(flatFilteredArray));
      } else {
        const error = {
          response: {
            status: "error",
            statusText: "no response",
          },
        };
        dispatch(dispatchError(error));
      }
    }
  };
};
