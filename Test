describe("Your Test Suite", () => {
  beforeEach(() => {
    Object.defineProperty(window, "sessionStorage", {
      value: {
        getItem: jest.fn((key) => {
          if (key === "ref") return "mockRef123";
          return null;
        }),
        setItem: jest.fn(),
        removeItem: jest.fn(),
        clear: jest.fn(),
      },
      writable: true,
    });
  });

  afterEach(() => {
    jest.clearAllMocks(); // Reset mocks after each test
  });

  it("should read and remove 'ref' from sessionStorage", () => {
    const refNo = sessionStorage.getItem("ref");
    expect(refNo).toBe("mockRef123");

    sessionStorage.removeItem("ref");
    expect(sessionStorage.removeItem).toHaveBeenCalledWith("ref");
  });

  it("should handle empty sessionStorage", () => {
    sessionStorage.getItem.mockReturnValueOnce(null);

    const refNo = sessionStorage.getItem("ref");
    expect(refNo).toBeNull();
  });
});
