import { render, screen, waitFor } from "@testing-library/react";
import Dashboard from "./Dashboard";
import { useDispatch, useSelector } from "react-redux";
import { useLocation, useNavigate } from "react-router-dom";
import { getClientInfo, resumeRequest, uploadRequest } from "../../services/common-service";

// Mocking Redux hooks
jest.mock("react-redux", () => ({
  useDispatch: jest.fn(),
  useSelector: jest.fn(),
}));

// Mocking React Router hooks
jest.mock("react-router-dom", () => ({
  useLocation: jest.fn(),
  useNavigate: jest.fn(),
}));

// Mocking async service calls
jest.mock("../../services/common-service", () => ({
  getClientInfo: jest.fn(),
  resumeRequest: jest.fn(),
  uploadRequest: jest.fn(),
  dispatchLoader: jest.fn(),
  lovRequests: jest.fn(),
  getBancaEligibleProducts: jest.fn(),
  rateAction: {
    updateAR: jest.fn(),
    updateEIR: jest.fn(),
  },
}));

// Initialize navigate function
const mockNavigate = jest.fn();

describe("Dashboard", () => {
  it("renders without crashing", () => {
    render(<Dashboard />);

    expect(screen.getByText("Dashboard")).toBeInTheDocument();
  });
});
